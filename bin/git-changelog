#! /usr/bin/env python3
##
#   Script:   git-changelog -- create a GNU-style ChangeLog from git
#   Version:  2.0
#
#   Author:   Paul J. Lucas
##

import  os
import  re
import  subprocess
import  textwrap

GIT_COMMAND = [
    'git', 'log',
    '--date=short',
    '--name-status',
    '--pretty=format:%ad|%aN|%aE|%s'
]

EMAIL_FROM = re.compile(r'plucas@.*splunk\.com')
EMAIL_TO   = 'paul@lucasmail.org'

EXCLUDED_WORDS = [
    'Intermediate',
    'Clean',
    'Comment',
    'Cosmetic',
    'Doxygen',
    'Gnu[Ll]ib',
    'Renaming',
    '[Tt]weak',
    'Typo',
]
EXCLUDED_RE = re.compile(rf"(?:{'|'.join(EXCLUDED_WORDS)})")

FILE_EXCLUDES = [
    r'^ChangeLog$',
    r'^\.git.*$',
    r'^README\.md$',
    r'^NEWS$',
]

###############################################################################

ME = os.path.basename(__file__)

proc = subprocess.Popen(GIT_COMMAND, stdout=subprocess.PIPE, text=True)

files = []
prev_author = prev_date = last_change = None
date_nl = ''

for line in proc.stdout:
    line = line.rstrip('\n')

    if re.match(r'^\d{4}', line):
        if files:
            if not EXCLUDED_RE.search(message):
                if author != prev_author or date != prev_date:
                    print(f'{date_nl}{date}  {author} <{email}>\n')
                    prev_author, prev_date = author, date
                    date_nl = '\n'
                    last_change = None

                message = re.sub(r'^\[skip ci\]\s*', '', message)
                change = f'{", ".join(files)}: {message}'
                if change != last_change:
                    print(textwrap.fill(change,
                                        break_long_words=False,
                                        break_on_hyphens=False,
                                        initial_indent='   * ',
                                        subsequent_indent='     ',
                                        width=79))
                    last_change = change
            files = []

        date, author, email, message = line.split('|', 3)
        if EMAIL_FROM.match(email):
            email = EMAIL_TO
        continue

    m = re.match(r'^[AM]\s+([^\s].*)$', line)
    if m:
        file = m.group(1)
        if re.search(r'\.(?:devcontainer|github)/', file):
            continue

        base = os.path.basename(file)
        if any(re.match(pattern, base) for pattern in FILE_EXCLUDES):
            continue

        if not re.match(r'^(?:Makefile\.\w+)$', base):
            file = re.sub(r'^man/man([1-9])/(\w+\.\1)', r'\2', file)
            file = re.sub(r'^(?:bin|lib|m4|src)/(.+)', r'\1', file)
            file = re.sub(r'^test(?:/\w+)?/(.+)', r'\1', file)

        files.append(file)

proc.stdout.close()
proc.wait()

# vim:set et sw=4 ts=4:
